name: Continuous Integration
on: [push]

env:
  # Share node version across jobs
  # actions/setup-node doesn't currently look at any config files
  # for now we do the simplest thing and set an environment variable.
  # See https://github.com/actions/setup-node/pull/239
  # Maybe we could use https://github.com/guardian/actions-setup-node directly in the meantime?
  NODE_VERSION: '14'

jobs:
  node-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      # Cache and install npm dependencies using https://github.com/bahmutov/npm-install
      - uses: bahmutov/npm-install@v1
      - run: npm run lint
      - run: npm test

  ruby-lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec rake ruby:lint

  # Actions can run in parallel at the job or the workflow level.
  # In order to run our build-dependent tests in parallel we need a way
  # to build the docs and then "seed" each stage with a copy.
  # We can do this using using artifacts along with a `needs` clause on each job
  # See: https://docs.github.com/en/actions/learn-github-actions/essential-features-of-github-actions#sharing-data-between-jobs
  #      https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows#creating-dependent-jobs
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      # Cache npm dependencies using https://github.com/bahmutov/npm-install
      - uses: bahmutov/npm-install@v1
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: npm run build --if-present
      - run: npm run docs:build
      - uses: actions/upload-artifact@v2
        with:
          name: docs-build
          path: |
            docs
            lib
          retention-days: 1

  pa11y:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      # Cache and install npm dependencies using https://github.com/bahmutov/npm-install
      - uses: bahmutov/npm-install@v1
      - uses: actions/download-artifact@v2
        with:
          name: docs-build
      # Explicitly install testing dependencies
      - run: npm ci
        working-directory: ./testing
      - run: ruby -run -e httpd -- docs -p 6006 &
      - run: npx pa11y-ci --config=pa11yci.local.js
        working-directory: ./testing/wcag

  backstop:
    needs: build
    runs-on: ubuntu-20.04
    services:
      backstop:
        image: backstopjs/backstopjs:5.1.0
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: docs-build
      - run: ruby -run -e httpd -- docs -p 6006 &
      - run: ./bin/wait-for localhost:6006 -- docker run --rm -v $(pwd)/testing/visual-regression:/src backstopjs/backstopjs test --config=backstop-config-actions.js
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: backstop-report
          path: |
            testing/visual-regression/backstop_data/html_report
            testing/visual-regression/backstop_data/bitmaps_reference
            testing/visual-regression/backstop_data/bitmaps_test
          retention-days: 2

  # The Ubuntu 20.04 virtual environment includes a copy of Chrome by default
  # We can use this to run our selenium tests locally without needing selenium grid
  # See: https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#browsers-and-drivers
  selenium-tests:
    needs: build
    runs-on: ubuntu-20.04
    env:
      HEADLESS: true
      APP_ENVIRONMENT: local
      BROWSER: chrome
      LOG_LOCATION: automation_logs.log
      TESTING_BASE_URL: 'http://localhost:6006'
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - uses: actions/download-artifact@v2
        with:
          name: docs-build
      - run: ruby -run -e httpd -- docs -p 6006 &
      - run: ./bin/wait-for localhost:6006 -- bundle exec rake design_system:all
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: grid-artifacts
          path: testing/artifacts
          retention-days: 7

  browserstack:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - config: 'Windows_10_85'
            browser: 'chrome'
          - config: 'Windows_10_81'
            browser: 'firefox'
          - config: 'Windows_7_80'
            browser: 'chrome'
          - config: 'Windows_7_78'
            browser: 'firefox'
          - config: 'OSX_Mojave_84'
            browser: 'chrome'
          - config: 'OSX_Mojave_12'
            browser: 'safari'
          - config: 'iPhone11_13'
            browser: 'ios'
          - config: 'iPhone8_12'
            browser: 'ios'
    steps:
      - run: echo $BROWSERSTACK_CONFIGURATION_OPTIONS $BROWSER
        env:
          BROWSERSTACK_CONFIGURATION_OPTIONS: ${{ matrix.config }}
          BROWSER: ${{ matrix.browser }}
