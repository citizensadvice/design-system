##
# This workflow runs two main groups of jobs:
#
# 1. A set of parallel jobs to run node and ruby based tests,
#    alongside a job to build the storybook docs and static assets.
#
# 2. A subsequent set of parallel jobs for backstop, and selenium.
#    These depend on the build job and are seeded with a copy of the docs.
##
name: Continuous Integration
on:
  push:
  schedule:
    - cron: '0 2 * * *'

jobs:
  node-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - uses: bahmutov/npm-install@v1
      - run: npm run lint
      - run: npm test

  engine-specs:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ruby_version: ['2.7', '3.0', '3.1']
        rails_version: ['6.0.4', '6.1.5', '7.0.2']
        exclude:
          - rails_version: '6.0.4'
            ruby_version: '3.0'
          - rails_version: '6.0.4'
            ruby_version: '3.1'
    env:
      RAILS_VERSION: ${{ matrix.rails_version }}
    defaults:
      run:
        working-directory: engine
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
          working-directory: engine
      - run: |
          bundle config path vendor/bundle
          bundle update
          bundle install --jobs 4 --retry 3
      - run: bundle exec rake spec

  engine-lint:
    needs: engine-specs
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: engine
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: '2.7.4'
          working-directory: engine
      - run: bundle exec rubocop --format github
      - run: bundle exec haml-lint

  demo-app-cypress:
    runs-on: ubuntu-20.04
    env:
      RAILS_ENV: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      # We link the @citizensadvice/design-system package
      # from the root but we only build the lib/ directory
      # when we publish to npm, so we need to build it first.
      - uses: bahmutov/npm-install@v1
      - run: npm run build

      # Setup demo app
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.4'
          working-directory: demo
      - run: |
          bundle config path vendor/bundle
          bundle update
          bundle install --jobs 4 --retry 3
        working-directory: demo

      # Cache cypress binary
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/Cypress
          key: cypress-binary-${{ hashFiles('package-lock.json') }}

      # Npm install
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: demo

      # Run cypress tests
      - run: ./bin/rails cypress:run
        working-directory: demo
        env:
          CYPRESS_RAILS_CYPRESS_OPTS: '--browser chrome'

      # Archive test screenshots
      - uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: demo/cypress/screenshots
        if: ${{ failure() }}

  demo-app-backstop:
    runs-on: ubuntu-20.04
    env:
      RAILS_ENV: test
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      # We link the @citizensadvice/design-system package
      # from the root but we only build the lib/ directory
      # when we publish to npm, so we need to build it first.
      - uses: bahmutov/npm-install@v1
      - run: npm run build

      # Setup demo app
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.4'
          bundler-cache: true
          working-directory: demo

      - uses: bahmutov/npm-install@v1
        with:
          working-directory: demo

      - run: ./bin/rails server -p 3001 &
        working-directory: demo

      - run: ./bin/wait-for localhost:3001

      - run: npx backstop test --docker --config=backstop-config-actions.js
        working-directory: demo

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: backstop-report
          path: |
            demo/visual-regression/backstop_data/html_report
            demo/visual-regression/backstop_data/bitmaps_reference
            demo/visual-regression/backstop_data/bitmaps_test
          retention-days: 3

  # Actions can run in parallel at the job or the workflow level.
  # In order to run our build-dependent tests in parallel we need a way
  # to build the docs and then "seed" each stage with a copy.
  # We can do this using using artifacts along with a `needs` clause on each job
  # See: https://docs.github.com/en/actions/learn-github-actions/essential-features-of-github-actions#sharing-data-between-jobs
  #      https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows#creating-dependent-jobs
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - uses: bahmutov/npm-install@v1
      - run: npm run build
      - run: npm run docs:build
      - uses: actions/upload-artifact@v2
        with:
          name: docs-build
          path: |
            docs
            lib
          retention-days: 1

  # The Ubuntu 20.04 virtual environment includes a copy of Chrome by default
  # We can use this to run our selenium tests locally without needing selenium grid
  # See: https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#browsers-and-drivers
  selenium-tests:
    needs: build
    runs-on: ubuntu-20.04
    env:
      TESTING_BASE_URL: 'http://localhost:6006'
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: '2.7.4'
          working-directory: testing
      - uses: actions/download-artifact@v2
        with:
          name: docs-build
      - run: bundle exec rubocop --format github
        working-directory: testing
      - run: ruby -run -e httpd -- docs -p 6006 &
      - run: ./bin/wait-for localhost:6006
      - run: bundle exec cucumber
        working-directory: testing
