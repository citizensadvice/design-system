@use '../1-settings/breakpoints' as breakpoint-settings;
@use '../2-tools/breakpoints' as breakpoint-tools;
@use '../2-tools/visibility' as visibility-tools;

.cads-hide {
  display: none !important;
}

.cads-invisible {
  visibility: hidden !important;
}

.cads-visually-hidden,
// @v6: deprecate cads-sr-only class in favour of cads-visually-hidden to match mixin name
.cads-sr-only {
  @include visibility-tools.cads-visually-hidden;
}

// @v6: deprecate this class, it is undocumented and never used
.cads-sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

@each $name, $breakpoint in breakpoint-settings.$cads-breakpoints {
  @if $name != 'sm' {
    .cads-show-#{$name}-up {
      display: none !important;

      @include breakpoint-tools.cads-media-breakpoint-up($name) {
        display: inherit !important;
      }
    }

    .cads-show-#{$name}-down {
      display: inherit !important;

      @include breakpoint-tools.cads-media-breakpoint-up($name) {
        display: none !important;
      }
    }

    .cads-show-#{$name}-only {
      display: none !important;

      @include breakpoint-tools.cads-media-breakpoint-only($name) {
        display: inherit !important;
      }
    }

    .cads-hide-#{$name}-up {
      @include breakpoint-tools.cads-media-breakpoint-up($name) {
        display: none !important;
      }
    }

    .cads-hide-#{$name}-down {
      display: none !important;

      @include breakpoint-tools.cads-media-breakpoint-up($name) {
        display: inherit !important;
      }
    }

    .cads-hide-#{$name}-only {
      @include breakpoint-tools.cads-media-breakpoint-only($name) {
        display: none !important;
      }
    }
  }
}
