// can't extend a placeholder across selectors (media query) so use a mixin instead.
@mixin cads-breadcrumb-arrow-right {
  color: $cads-language__input-border-colour;
  content: '\203A';
  margin-right: $cads-spacing-3;
  font-size: 18px; // Fix size as this is a symbol
  float: left; // Suppress inline spacings and underlining of the separator
}

/** @define breadcrumbs */
.cads-breadcrumbs {
  @include cads-restrict-content-width();

  padding: $cads-spacing-3 0 $cads-spacing-3 $cads-spacing-4;
  border-bottom: $cads-border-width-small solid $cads-language__border_colour;
  margin-bottom: $cads-spacing-5;

  &__list {
    margin: 0 0 0 (-$cads-spacing-3); // account for left margin of breadcrumb__crumb
    padding: 0;
    display: flex;
    flex-wrap: wrap;
  }

  &__crumb {
    @extend %cads-list-item;

    list-style: none;
    margin: 0;
    font-size: $cads-font-size;
    margin-left: $cads-spacing-3;

    + .cads-breadcrumbs__crumb::before {
      @include cads-breadcrumb-arrow-right;
    }
  }

  @include cads-media-breakpoint-only(sm) {
    &__crumb {
      display: none;
    }

    // show only the second to last item in list - i.e. link to parent page.
    &__crumb:nth-last-child(2) {
      display: block;
      margin-left: 0;

      &::before {
        content: '\2039';
        margin: 0 $cads-spacing-3;
        color: $cads-language__input-border-colour;
      }
    }
  }
}

///
// Variant: No collapse
///
.cads-breadcrumbs--no-collapse {
  @include cads-media-breakpoint-only(sm) {
    .cads-breadcrumbs__crumb {
      display: inline;

      &:nth-last-child(2) {
        display: inline;
        margin-left: 0;

        &::before {
          display: inherit;

          @include cads-breadcrumb-arrow-right;
        }
      }
    }
  }
}

/** end **/

/** @define breadcrumbs-wrapper; weak */
.cads-breadcrumbs-wrapper {
  margin-bottom: $cads-spacing-5;
  border-bottom: $cads-border-width-small solid $cads-language__border_colour;

  .cads-breadcrumbs {
    margin: 0 auto;
    padding: $cads-spacing-3 0;
    border-bottom: none;

    @each $breakpoint in map-keys($cads-breakpoints) {
      $gutter: map-get($cads-grid-breakpoint-gutters, $breakpoint);

      @include cads-media-breakpoint-up($breakpoint) {
        padding-left: $gutter;
        padding-right: $gutter;
      }
    }
  }
}

/* stylelint-disable plugin/selector-bem-pattern */
@media print {
  .cads-breadcrumbs-wrapper {
    display: none;
  }
}
