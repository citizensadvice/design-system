# frozen_string_literal: true

require "bridgetown"

Bridgetown.load_tasks

# Run rake without specifying any command to execute a deploy build by default.
task default: :deploy

#
# Standard set of tasks, which you can customize if you wish:
#
desc "Build the Bridgetown site for deployment"
task deploy: [:clean, "frontend:build"] do
  Bridgetown::Commands::Build.start
end

desc "Build the site in a test environment"
task :test do
  ENV["BRIDGETOWN_ENV"] = "test"
  Bridgetown::Commands::Build.start
end

desc "Runs the clean command"
task :clean do
  Bridgetown::Commands::Clean.start
end

namespace :frontend do
  desc "Build the frontend with Webpack for deployment"
  task :build do
    sh "yarn run webpack-build"
  end

  desc "Watch the frontend with Webpack during development"
  task :dev do
    sh "yarn run webpack-dev --color"
  rescue Interrupt
  end
end

#
# Add your own Rake tasks here! You can use `environment` as a prerequisite
# in order to write automations or other commands requiring a loaded site.

desc "Generate component docs"
task :generate_component_docs => :environment do
  automation do
    component_name = ask("Component name")

    component_id = ask(
      "Component ID",
      default: component_name.parameterize(separator: "_")
    )

    create_file "src/_component_examples/_#{component_id}/_defaults.yml" do
      <<~YAML
        category: #{component_id}
      YAML
    end

    create_file "src/_component_examples/_#{component_id}/default.erb" do
      <<~ERB
        ---
        title: default
        ---

        Default #{component_name.downcase} example
      ERB
    end

    append_to_file "src/_data/component_arguments.yml" do
      <<~YAML
        #{component_id}:
          - argument: example
            description: Example argument
      YAML
    end

    create_file "src/_component_docs/#{component_id.gsub("_", "-")}.md" do
      <<~MARKDOWN
        ---
        title: #{component_name}
        ---

        <%= render(Shared::ComponentExample.new(:#{component_id}, :default)) %>

        ## Using with Rails

        If you are using the `citizens_advice_components` gem, you can call the component from within a template using:

        <%= render(Shared::ComponentExampleSource.new(:#{component_id}, :default)) %>

        ### Component arguments

        <%= render Shared::ArgumentsTable.new(:#{component_id}) %>
      MARKDOWN
    end
  end
end
